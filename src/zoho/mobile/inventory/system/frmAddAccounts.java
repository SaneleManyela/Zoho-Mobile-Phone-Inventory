/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zoho.mobile.inventory.system;

import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Oscar
 */
public class frmAddAccounts extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmAddAccountant
     */
    public frmAddAccounts() {
        initComponents();
    }
    
    private String strRegisterFor;
    //A variable of type file that will be used to create a new file
    //to write to.
    File flAccount;
    
    //A  variable of type st    ring that will hold user entered details.
    String strFileContents;
    
    public void mSetRegisterFor(String strValue)
    {
        this.strRegisterFor = strValue;
    }
    
    private String mGetRegisterFor()
    {
        return strRegisterFor;
    }
    
    //A method that gets GUI entered values, concatenate and assign them to
    //variable strFileContents.
    private void mGetValuesFromGUI()
    {
        strFileContents = txtName.getText()+" "+txtPassword.getText();
    }
    
    //A method that clears GUI text fields
    private void mClear()
    {
        txtName.setText("");
        txtPassword.setText("");
    }
    
    //A method that checks if an accountant file already exits and
    //return a boolean value
    private boolean mCheckIfAccountFileExists()
    {
        flAccount = new File(txtName.getText().toUpperCase()+".txt");
        return flAccount.exists();
    }
    
    //A method that creates a new file using the File variable flAccount
    private void mCreateAccountFile()
    {
        try
        {
            flAccount.createNewFile();
        }
        catch(IOException eX)
        {
            JOptionPane.showMessageDialog(null, "Something went wrong while creating file.\n"+eX);
        }
    }
    
    //A method that writes to the newly created file
    private void mWriteAccountDetailsToFile()
    {
        String strAccount = txtName.getText().toUpperCase()+".txt";
        try
        {
            try (java.io.FileWriter fw = new java.io.FileWriter(strAccount, true)) {
                fw.write(strFileContents);
                fw.close();
            }
            JOptionPane.showMessageDialog(null, "File added successfully.");
        }
        catch(IOException eX)
        {
            JOptionPane.showMessageDialog(null, "Something went wrong while writing file"+eX);
        }
    }
    
    private void mAddNewUser()
    {
        mGetValuesFromGUI();
        mCreateAccountFile();
        mWriteAccountDetailsToFile();
        mViewAccountOnFileExplorer();
        mClear();
    }
    
    //A method that opens File explorer to the location where the created file is located
    private void mViewAccountOnFileExplorer()
    {
        try
        {
            Runtime.getRuntime().exec("explorer.exe /select,"+flAccount.getAbsolutePath());
        }
        catch(IOException eX)
        {
            JOptionPane.showMessageDialog(null, eX.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnAddAcc = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 255, 204));

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHeading.setText("Add Accountant");

        lblName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblName.setText("Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Password");

        btnAddAcc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddAcc.setText("Add Acc");
        btnAddAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAccActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddAcc)
                        .addGap(42, 42, 42)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(btnClose))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHeading)
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeading)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAcc)
                    .addComponent(btnClear)
                    .addComponent(btnClose))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAccActionPerformed
        if(txtName.getText().equals("")){ //Checks if txtName has been passed a value
            JOptionPane.showMessageDialog(null, "Please provide an accountant's name.");
            txtName.requestFocusInWindow(); //Places the cursor inside txtName
        }
        else if(txtPassword.getText().equals("")){ //Checks if txtPassword has been passed a value
            JOptionPane.showMessageDialog(null, "Please provide an accountant's password.");
            txtPassword.requestFocusInWindow(); //Places the cursor inside txtPassword
        }
        else{
            
            if(mCheckIfAccountFileExists()){ //Checks if account exists
                JOptionPane.showMessageDialog(null, "This accountant has already been added.");
            }
            else{ //If account does not exist the else block is executed.
                switch(mGetRegisterFor())
                {
                    case "accountant":
                        mAddNewUser();
                        break;
                    case "storeman":
                        if(!(txtPassword.getText().startsWith("str"))){ //Checks if password is prefixed with 'str'
                            JOptionPane.showMessageDialog(null, "Storeman password must be prefixed with 'str'");
                            txtPassword.setText("str"); //Sets value inside txtPassword to 'str'
                            txtPassword.requestFocusInWindow(); //Places the cursor inside txtPassword but after 'str'
                        }else{
                            mAddNewUser();
                            txtPassword.setText("str");
                        }
                        break;
                }
            }
        }
    }//GEN-LAST:event_btnAddAccActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        mClear(); //This button event invokes a method that clears text fields
        if(mGetRegisterFor().equals("storeman")){
            txtPassword.setText("t");
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        //This button event invokes a method that destroys an active 
        //object using the following line
        this.hide(); 
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAcc;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables
}
